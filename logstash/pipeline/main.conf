input {
    beats {
        port => 5044
    }
}

filter {
  json {
    source => "message"
  }
  date {
    match => ["timestamp", "UNIX_MS"]
    target => "@timestamp"
  }
  ruby {
      # Normalize the headers field keys to lowercase
      code => "
          if event.get('[transaction][request][headers]')
              headers = event.get('[transaction][request][headers]')
              normalized_headers = {}
              headers.each { |k, v|
                  normalized_headers[k.downcase] = v
              }
              event.set('[transaction][request][headers]', normalized_headers)
          end
      "
  }

  ruby {
    code => "event.set('indexDay', event.get('[@timestamp]').time.localtime('+07:00').strftime('%Y%m%d'))"
  }
}

output {
    if [log][file][path] == "/var/log/modsec_audit.json" {
        elasticsearch {
            hosts => "${ELASTICSEARCH_HOST_PORT}"
            user => "${ELASTIC_USERNAME}"
            password => "${ELASTIC_PASSWORD}"
            manage_template => false
            index => "modsec-%{+YYYY.MM.dd}"
            ssl => true
            ssl_certificate_verification => false
            cacert => "/usr/share/logstash/certs/ca/ca.crt"
        }
    } else if [log][file][path] == "/var/log/haproxy.log" {
        elasticsearch {
            hosts => "${ELASTICSEARCH_HOST_PORT}"
            user => "${ELASTIC_USERNAME}"
            password => "${ELASTIC_PASSWORD}"
            manage_template => false
            index => "haproxy-logs-%{+YYYY.MM.dd}"
            ssl => true
            ssl_certificate_verification => false
            cacert => "/usr/share/logstash/certs/ca/ca.crt"
        }
    } else {
        elasticsearch {
            hosts => "${ELASTICSEARCH_HOST_PORT}"
            user => "${ELASTIC_USERNAME}"
            password => "${ELASTIC_PASSWORD}"
            manage_template => false
            index => "filebeat-%{+YYYY.MM.dd}"
            ssl => true
            ssl_certificate_verification => false
            cacert => "/usr/share/logstash/certs/ca/ca.crt"
        }
    }
}
